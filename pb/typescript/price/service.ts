// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v3.20.3
// source: price/service.proto

/* eslint-disable */
import {
  type CallOptions,
  type ChannelCredentials,
  Client,
  type ClientOptions,
  type ClientUnaryCall,
  type handleUnaryCall,
  makeGenericClientConstructor,
  type Metadata,
  type ServiceError,
  type UntypedServiceImplementation,
} from "@grpc/grpc-js";
import { SignInRequest, SignInResponse } from "../user/models/sign_in";

export const protobufPackage = "user";

export type UserServiceService = typeof UserServiceService;
export const UserServiceService = {
  signInWithWallet: {
    path: "/user.UserService/SignInWithWallet",
    requestStream: false,
    responseStream: false,
    requestSerialize: (value: SignInRequest): Buffer => Buffer.from(SignInRequest.encode(value).finish()),
    requestDeserialize: (value: Buffer): SignInRequest => SignInRequest.decode(value),
    responseSerialize: (value: SignInResponse): Buffer => Buffer.from(SignInResponse.encode(value).finish()),
    responseDeserialize: (value: Buffer): SignInResponse => SignInResponse.decode(value),
  },
} as const;

export interface UserServiceServer extends UntypedServiceImplementation {
  signInWithWallet: handleUnaryCall<SignInRequest, SignInResponse>;
}

export interface UserServiceClient extends Client {
  signInWithWallet(
    request: SignInRequest,
    callback: (error: ServiceError | null, response: SignInResponse) => void,
  ): ClientUnaryCall;
  signInWithWallet(
    request: SignInRequest,
    metadata: Metadata,
    callback: (error: ServiceError | null, response: SignInResponse) => void,
  ): ClientUnaryCall;
  signInWithWallet(
    request: SignInRequest,
    metadata: Metadata,
    options: Partial<CallOptions>,
    callback: (error: ServiceError | null, response: SignInResponse) => void,
  ): ClientUnaryCall;
}

export const UserServiceClient = makeGenericClientConstructor(UserServiceService, "user.UserService") as unknown as {
  new (address: string, credentials: ChannelCredentials, options?: Partial<ClientOptions>): UserServiceClient;
  service: typeof UserServiceService;
  serviceName: string;
};

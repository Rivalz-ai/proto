// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.32.0
// source: aave/service.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";
import { SupplyERC20Request, SupplyERC20Response } from "./models/supplyERC20";

export const protobufPackage = "aave";

export const AAVE_PACKAGE_NAME = "aave";

export interface AaveServiceClient {
  supplyErc20(request: SupplyERC20Request): Observable<SupplyERC20Response>;
}

export interface AaveServiceController {
  supplyErc20(
    request: SupplyERC20Request,
  ): Promise<SupplyERC20Response> | Observable<SupplyERC20Response> | SupplyERC20Response;
}

export function AaveServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["supplyErc20"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("AaveService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("AaveService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const AAVE_SERVICE_NAME = "AaveService";

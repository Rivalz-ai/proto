// Code generated by protoc-gen-ts_proto. DO NOT EDIT.
// versions:
//   protoc-gen-ts_proto  v2.7.7
//   protoc               v6.32.0
// source: balance/service.proto

/* eslint-disable */
import { GrpcMethod, GrpcStreamMethod } from "@nestjs/microservices";
import { Observable } from "rxjs";
import { BalanceByAddressRequest, BalanceResponse } from "./models/balance";

export const protobufPackage = "balance";

export const BALANCE_PACKAGE_NAME = "balance";

export interface BalanceServiceClient {
  getTokenBalance(request: BalanceByAddressRequest): Observable<BalanceResponse>;
}

export interface BalanceServiceController {
  getTokenBalance(
    request: BalanceByAddressRequest,
  ): Promise<BalanceResponse> | Observable<BalanceResponse> | BalanceResponse;
}

export function BalanceServiceControllerMethods() {
  return function (constructor: Function) {
    const grpcMethods: string[] = ["getTokenBalance"];
    for (const method of grpcMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcMethod("BalanceService", method)(constructor.prototype[method], method, descriptor);
    }
    const grpcStreamMethods: string[] = [];
    for (const method of grpcStreamMethods) {
      const descriptor: any = Reflect.getOwnPropertyDescriptor(constructor.prototype, method);
      GrpcStreamMethod("BalanceService", method)(constructor.prototype[method], method, descriptor);
    }
  };
}

export const BALANCE_SERVICE_NAME = "BalanceService";
